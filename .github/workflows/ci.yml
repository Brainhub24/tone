name: Publish

on: 
  push:
    tags:
    - 'v*'
env:
  PROJECT_NAME: 'tone'
  PROJECT_PATH: 'tone/tone.csproj'
  PROJECT_OUTPUT_PATH: ${{ github.workspace }}/output/
  DOTNET_VERSION: '5.0.403'
  DOTNET_FRAMEWORK: 'net5.0'
jobs:
  release:
    name: Release
    strategy:
      matrix:
        kind: ['linux', 'windows', 'macOS']
        include:
          - kind: linux
            os: ubuntu-latest
            target: linux-x64
          - kind: windows
            os: windows-latest
            target: win-x64
          - kind: macOS
            os: macos-latest
            target: osx-x64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      
      - name: Get version
        id: version
        uses: battila7/get-version-action@v2
        
      #- name: Restore
      #  run: dotnet restore tone/tone.csproj

      - name: Build
        shell: bash
        run: |
          # tag=$(git describe --tags --abbrev=0)
          release_name="${{ env.PROJECT_NAME }}-${{ steps.get_version.outputs.version-without-v }}-${{ matrix.target }}"
          # Build everything
          dotnet publish ${{ env.PROJECT_PATH }} --framework ${{ env.DOTNET_FRAMEWORK }} --runtime "${{ matrix.target }}" -c Release -o "$release_name"
          # Pack files
          if [ "${{ matrix.target }}" == "win-x64" ]; then
            # Pack to zip for Windows
            7z a -tzip "${release_name}.zip" "./${release_name}/*"
          else
          tar czvf "${release_name}.tar.gz" "$release_name"
          fi
          # Delete output directory
          rm -r "$release_name"
      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          files: "${{ env.PROJECT_NAME }}-${{ steps.get_version.outputs.version-without-v }}-${{ matrix.target }}*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
